#!/bin/sh

# script for mounting usb- and mtpfs-devices with dmenu-prompt

mountselect(){
	drives=$(lsblk -rpo "name,type,size,mountpoint" | awk '$1!~"sda"&&$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}')
	cells=$(simple-mtpfs -l 2> /dev/null)
	if [ -z "$drives" ]
	then
		[ -z "$cells" ] && exit 1;cellmount
	else
		if [ -z "$cells" ]; then usbmount; else mwhat; fi
	fi

}

mwhat(){
	case $(printf "USB\nCell" | dmenu -i -p "What to mount?") in
		USB)	usbmount;;
		Cell)	cellmount;;
	esac
}

umountselect(){
	drives=$(lsblk -rpo "name,type,size,mountpoint" | awk '$1!~"sda"&&$2=="part"&&$4!~/boot|SWAP|home/&&length($4)>1{printf "%s (%s) on %s\n",$1,$3,$4}')

	if ! grep simple-mtpfs /etc/mtab
	then
		[ -z "$drives" ] && exit 1; usbumount
	else
		if [ -z "$drives" ]; then cellumount; else uwhat; fi
	fi
}

uwhat(){
	case $(printf "USB\nCell" | dmenu -i -p "What to umount?") in
		USB)	usbumount;;
		Cell)	cellumount;;
	esac
}
usbmount(){
	selectdrive=$(echo "$drives" | dmenu -i -p "Mount which drive?" | awk '{print $1}')
	[ -z $selectdrive ] && exit
	used=$(lsblk -o mountpoint | awk '$1~"usb"')
	[ -z "$used" ] && used=nothing
	getmountpoint=$( find /mnt/usb* -depth -maxdepth 1 | grep -v "$used")
	selectmountpoint=$(echo "$getmountpoint" | dmenu -i -p "Choose mountpoint")
	sudo mount $selectdrive $selectmountpoint && pgrep -x dunst && notify-send "$selectdrive mounted to $selectmountpoint."
}

usbumount(){
	if [ -z "$drives" ]; then cumount; fi
	selectdrive=$(echo "$drives" | dmenu -i -p "Umount which drive?" | awk '{print $4}')
	[ -z $selectdrive ] && exit
	sync && sudo umount $selectdrive && pgrep -x dunst && notify-send "$selectdrive umounted."
}
cellmount(){
	selectcell=$(echo "$cells" | dmenu -i -p "Mount wich cell?" | cut -d: -f1)
	[ -z $selectcell ] && exit 1
	used=$(lsblk -o mountpoint | awk '$1~"cell"')
	[ -z "$used" ] && used=nothing
	getmountpoint=$( find $HOME/mnt/cell* -depth -maxdepth 1 | grep -v "$used")
	selectmountpoint=$(echo "$getmountpoint" | dmenu -i -p "Choose mountpoint")
	simple-mtpfs --device "$selectcell" "$selectmountpoint" && pgrep -x dunst && notify-send "Android devices mounted "$selectmountpoint"."

}
cellumount(){
	selectcell=$(awk '/simple-mtpfs/ {print $2}' /etc/mtab | dmenu -i -p "Umount which Android device?")
	[ -z $selectcell ] && exit 1
	sudo umount -l $selectcell && pgrep -x dunst && notify-send "$selectcell umounted"
}

main(){

	case $1 in
		-m)	mountselect;;
		-u)	umountselect;;
	esac
}

main ${@}
